<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lifetime = 0

Part_Define()
Ship_Surface_Create()
Draw_Ship_Surface()
if instance_exists(Shipyard)
    {
    nearest = instance_nearest(x,y,Shipyard)
    nearest.target = id
    }
x = room_width/2
y = room_height/2
status = "docked"
phase = 0
direction = 90
ship_direction = direction


global.camera_x1 = 0
global.camera_y1 = 0
global.camera_x2 = 0
global.camera_y2 = 0

//view[0] is the ship view
view_enabled = true
view_visible[0] = true
view_wview[0] = 64
view_hview[0] = 64
view_xview[0] = x-view_wview[0]/2
view_xview[0] = y-view_hview[0]/2
//view_x1
//view_y1


global.ix = 0
global.iy = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lifetime += 1

//update bounding box
ship_x1 = x - ship_width/2
ship_x2 = x + ship_width/2
ship_y1 = y - ship_height/2
ship_y2 = y + ship_height/2


if instance_exists(Shipyard)
Ship_Status()
//camera scripts
Camera_Center()
Camera_Zoom()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.zoom -= 1
if keyboard_check(vk_space)
global.zoom -= 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.zoom += 1
if keyboard_check(vk_space)
global.zoom += 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.camera_focus = id
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
view_wport[0] = 512
view_hport[0] = 512
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_color(c_red)

Draw_Ship_Surface()

//offset script for srawing rotated surface
rad = degtorad(direction-90); // Convert it to radian for convenience
xorg = cos(rad)*(ship_width+32)/2 + sin(rad)*(ship_height+32)/2;
yorg = -sin(rad)*(ship_width+32)/2 + cos(rad)*(ship_height+32)/2;
//end offset script
if status != "docked"
    {
    draw_surface_ext(ship_surface,x-xorg+1,y-yorg+1,1,1,direction-90,c_white,255)
    draw_set_color(c_blue)
    draw_line(mouse_x,mouse_y,ship_x1,ship_y1)
    draw_line(mouse_x,mouse_y,ship_x2,ship_y2)
    draw_set_color(c_green)
    draw_line(x,y,mouse_x,mouse_y)
    }

//draw_sprite_ext(ship_sprite,0,x,y,1,1,direction-90,c_white,255)
draw_set_color(c_black)
draw_set_halign(fa_center)
draw_text(x,y+40,status)
draw_text(x,y+160,"Phase " + string(phase))
draw_text(x,y+192,"Heading: " + string(direction))
draw_set_color(c_white)
draw_rectangle(0,0,room_width,room_height,true)

//draw line from it to shipyard
draw_set_color(c_blue)
draw_line(x,y,nearest.x-nearest.shipyard_width/2,nearest.y-nearest.shipyard_height/2)

//draw bounding box
draw_rectangle(ship_x1,ship_y1,ship_x2,ship_y2,true)
//draw line to mouse
draw_set_color(c_red)

draw_set_color(c_navy)
draw_text(mouse_x,mouse_y - 32,"[" + string(global.ix) + "," + string(global.iy) + "]")
draw_text(mouse_x,mouse_y - 64,"Part: " + string(ship_array[global.ix,global.iy]))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Restart the game
game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//slow speed
//room_speed = 8

//update sprite
ship_sprite = sprite_create_from_surface(ship_surface,16,16,ship_width,ship_height,
                                        true,false,ship_width/2,ship_height/2)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_shift)
    {
    switch (status)
        {
        case "undocking":
            {
            status = "free"
            phase = 1
            audio_play_sound(undock,1,0)
            nearest.target = 0
            global.zoom = 512
            CamOnPlayer()
            break;
            }
        case "docked":
            {
            Ship_Undock()
            break;
            }
        case "docking":
            {
            status = "free"
            phase = 1
            audio_play_sound(undock,1,0)
            nearest.target = 0
            global.zoom = 512
            CamOnPlayer()
            break;
            }
        case "free":
            {

            if nearest_dist &lt;= nearest.shipyard_height*2
                {
                status = "docking"
                phase = 1
                speed = 0
                global.camera_focus = nearest
                }
            break;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_speed = 60
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
