<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lifetime = 0

Part_Define()
global.selection = 0
x = room_width/2
y = room_height/2
shipyard_width = 32 + (5*16)
shipyard_height = 32 + (5*16)

shipyard_x1 = x - shipyard_width/2
shipyard_x2 = x + shipyard_width/2
shipyard_y1 = y - shipyard_height/2
shipyard_y2 = y + shipyard_height/2

Shipyard_Create()
t = "None"

target = 0

//element 1 is the left selection pane
element1x = 0
element1max = 128
element2x = 0
element2max = 160
element3y = 0
element3max = 80

//calculate how many spots
element1xspots = floor((element1max - 32) /32)
element1yspots = floor((shipyard_height - 32) /32)
element1spots = element1xspots * element1yspots

for (iy = 0; iy &lt;= element1yspots-1; iy += 1)
    {//place the button locations
    for (ix = 1; ix &lt;= element1xspots; ix += 1)
        {//orgin is top-left now
        element1position[iy*element1xspots + ix,1] =shipyard_x1 - element1x + ix*32
        element1position[iy*element1xspots + ix,2] =shipyard_y1 + (iy+1)*32
        }
    }

//element1 buttons

Buttons_Enable()
//enable a few





button_last = "None"


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lifetime += 1

if target == global.player_ship
    {//if the ship is docked
    
    //element 1
    if element1x &lt; element1max
        {
        element1x += 2
        }
    else element1x = element1max
    
    //element 2
    if element2x &lt; element2max
        {
        element2x += 2
        }
    else element2x = element2max

    //element 3
    if element3y &lt; element3max
        {
        element3y += 1
        }
    else element3y = element3max
    }
    
//------------------------//
if target == 0
    {//if nothing is docked, wind everything to 0
    if element1x &gt; 0
        {
        element1x -= 8
        }
    if element2x &gt; 0
        {
        element2x -= 8
        }
    if element3y &gt; 0
        {
        element3y -= 4
        }
    }

room_caption = global.selection

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//element 1

Element_Click()

    
/*
if mouse_x &gt; shipyard_x1 &amp;&amp; mouse_x &lt; shipyard_x2
&amp;&amp; mouse_y &gt; shipyard_y1 &amp;&amp; mouse_y &lt; shipyard_y2
    {//if in both
    global.selection = "Zero"
    }
    */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(standard)

Shipyard_Draw()

//draw the surface
if surface_exists(shipyard_surface)
    {
    draw_set_color(c_white)
    draw_surface(shipyard_surface,x-shipyard_width/2+1,y-shipyard_height/2+1)
    }
//draw border
draw_set_color(c_black)
draw_rectangle(x-shipyard_width/2,y-shipyard_height/2,
                x+shipyard_width/2,y+shipyard_height/2,true)

dist_to_player = point_distance(x,y,global.player_ship.x,global.player_ship.y)
if dist_to_player &lt; 256
    {
    draw_set_color(c_red)
    draw_set_halign(fa_center)
    if global.player_ship.status == "free"
    text = "press 'SHIFT' to dock"
    else text = "press 'SHIFT' to undock"
    draw_text(x,y+shipyard_height/2+32,text)
    }


//draw element1x
Element1()
//draw element2x
Element2()
//draw element3y
Element3()
if target == global.player_ship
Element_Hover()

//draw the selection underneath the ship
if target == global.player_ship
    {
    Element2_Text(global.selection,"bottom-left")
    }

draw_text(mouse_x,mouse_y+32,Button_To_Part(global.selection))

//draw_line(mouse_x,mouse_y,element1button[1,1],element1button[1,2])
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
